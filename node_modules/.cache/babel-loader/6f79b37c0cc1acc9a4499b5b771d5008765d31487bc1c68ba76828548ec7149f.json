{"ast":null,"code":"import Service from '../Service';\nimport History from '../History';\nimport { decrypt, encrypt } from '../utils/HashPassword';\nimport Cookies from 'js-cookie';\n\n// action to get vehicle Details\nexport const getVehicleDetails = () => async dispatch => {\n  const {\n    data\n  } = await Service.getDetails();\n  dispatch({\n    type: 'GET_DETAILS',\n    payload: data\n  });\n};\n// action to add vehicle Details\n\nexport const postVehicleDetails = val => async dispatch => {\n  const {\n    data\n  } = await Service.postDetails(val);\n  History.push('/vehicleLists');\n  dispatch(successMessage('Added successFully'));\n};\n\n// action to edit vehicle Details\n\nexport const getAllVehicleDetails = id => async dispatch => {\n  dispatch({\n    type: 'GET_ID',\n    payload: id\n  });\n  const {\n    data\n  } = await Service.getAllDetails(id);\n  dispatch({\n    type: 'GET_IDDETAILS',\n    payload: data\n  });\n};\nexport const editVehicleDetails = (id, payload) => async dispatch => {\n  dispatch({\n    type: 'GET_ID',\n    payload: id\n  });\n  const {\n    data\n  } = await Service.editDetails(id, payload);\n  History.push('/vehicleLists');\n  dispatch(successMessage('Edited successFully'));\n};\n\n// toaster\n\nexport const successMessage = payload => {\n  return {\n    type: 'SUCCESS',\n    payload: payload\n  };\n};\nexport const resetsuccessMessage = payload => {\n  return {\n    type: 'RESET',\n    payload: null\n  };\n};\n\n// service\n\n// action to get vehicle Details\nexport const getServiceDetails = () => async dispatch => {\n  const {\n    data\n  } = await Service.getService();\n  dispatch({\n    type: 'GET_SERVICEDETAILS',\n    payload: data\n  });\n};\n// action to add vehicle Details\n\nexport const postServiceDetails = val => async dispatch => {\n  const {\n    data\n  } = await Service.postService(val);\n  History.push('/service');\n  dispatch(successMessage('Added successFully'));\n};\n\n// action to edit vehicle Details\n\nexport const getAllServiceDetails = id => async dispatch => {\n  dispatch({\n    type: 'GET_SERVICEID',\n    payload: id\n  });\n  const {\n    data\n  } = await Service.getAllService(id);\n  dispatch({\n    type: 'GET_SERVICEIDDETAILSON',\n    payload: data\n  });\n};\nexport const editServiceDetails = (id, payload) => async dispatch => {\n  dispatch({\n    type: 'GET_SERVICEID',\n    payload: id\n  });\n  const {\n    data\n  } = await Service.editService(id, payload);\n  History.push('/service');\n  dispatch(successMessage('Edited successFully'));\n};\n\n// Logout action\nexport const logout = () => async dispatch => {\n  Cookies.remove('login');\n  Cookies.remove('User');\n  Cookies.remove('UserName');\n  dispatch({\n    type: 'LOGOUT',\n    payload: null\n  });\n  History.push('/');\n  window.location.reload();\n};\n\n// Action to create a new user and encrypt password\nexport const createuser = data => async dispatch => {\n  const encryptedusersdata = await encrypt(data.password);\n  const {\n    password,\n    ...values\n  } = data;\n  Service.setuserdata({\n    ...values,\n    encryptedusersdata\n  });\n  History.push('/login');\n  dispatch(successMessage('SignUp successFully'));\n};\n\n// Action to get the admin data from JSON and decrypt\nexport const setLoginUsers = admindata => async dispatch => {\n  let payload;\n  const User = await Service.getuserdata();\n  const usersCheck = await User.data.find(_ref => {\n    let {\n      userName\n    } = _ref;\n    return userName === admindata.userName;\n  });\n  if (!usersCheck) {\n    alert('not valid ');\n  }\n  const userDecrypt = decrypt(usersCheck.encryptedusersdata);\n  if (userDecrypt === admindata.password) {\n    payload = admindata.userName;\n    Cookies.set('User', admindata.userName);\n    Cookies.set('UserName', admindata.userName);\n    dispatch({\n      type: 'CHECK_USER ',\n      payload\n    });\n    History.push('/');\n    window.location.reload();\n  } else {\n    payload = false;\n    alert('incorrect password or Username');\n    dispatch(successMessage('Login SuccessFully'));\n    // History.push('/');\n  }\n};\n\n// change password\n\nexport const passwordChange = (user, currentPassword, newPassword) => async dispatch => {\n  const {\n    data\n  } = await Service.getuserdata();\n  const usersCheck = data.find(item => item.userName === user);\n  const decrypted = decrypt(usersCheck.encryptedusersdata);\n  if (decrypted === currentPassword) {\n    let newPs = encrypt(newPassword);\n    let userName = usersCheck.userName;\n    const query = await Service.updatePass('users', usersCheck.id, {\n      userName: userName,\n      encryptedusersdata: newPs\n    });\n    alert('password updated successfully');\n  } else {\n    alert('current password is wrong');\n  }\n  History.push('/');\n};","map":{"version":3,"names":["Service","History","decrypt","encrypt","Cookies","getVehicleDetails","dispatch","data","getDetails","type","payload","postVehicleDetails","val","postDetails","push","successMessage","getAllVehicleDetails","id","getAllDetails","editVehicleDetails","editDetails","resetsuccessMessage","getServiceDetails","getService","postServiceDetails","postService","getAllServiceDetails","getAllService","editServiceDetails","editService","logout","remove","window","location","reload","createuser","encryptedusersdata","password","values","setuserdata","setLoginUsers","admindata","User","getuserdata","usersCheck","find","userName","alert","userDecrypt","set","passwordChange","user","currentPassword","newPassword","item","decrypted","newPs","query","updatePass"],"sources":["/home/asvin-l/Basim - 14/src/action/index.js"],"sourcesContent":["import Service from '../Service';\nimport History from '../History';\nimport { decrypt, encrypt } from '../utils/HashPassword';\nimport Cookies from 'js-cookie';\n\n// action to get vehicle Details\nexport const getVehicleDetails = () => async (dispatch) => {\n  const { data } = await Service.getDetails();\n  dispatch({\n    type: 'GET_DETAILS',\n    payload: data,\n  });\n};\n// action to add vehicle Details\n\nexport const postVehicleDetails = (val) => async (dispatch) => {\n  const { data } = await Service.postDetails(val);\n  History.push('/vehicleLists');\n  dispatch(successMessage('Added successFully'));\n};\n\n// action to edit vehicle Details\n\nexport const getAllVehicleDetails = (id) => async (dispatch) => {\n  dispatch({\n    type: 'GET_ID',\n    payload: id,\n  });\n  const { data } = await Service.getAllDetails(id);\n  dispatch({\n    type: 'GET_IDDETAILS',\n    payload: data,\n  });\n};\n\nexport const editVehicleDetails = (id, payload) => async (dispatch) => {\n  dispatch({\n    type: 'GET_ID',\n    payload: id,\n  });\n  const { data } = await Service.editDetails(id, payload);\n  History.push('/vehicleLists');\n  dispatch(successMessage('Edited successFully'));\n};\n\n// toaster\n\nexport const successMessage = (payload) => {\n  return {\n    type: 'SUCCESS',\n    payload: payload,\n  };\n};\n\nexport const resetsuccessMessage = (payload) => {\n  return {\n    type: 'RESET',\n    payload: null,\n  };\n};\n\n// service\n\n// action to get vehicle Details\nexport const getServiceDetails = () => async (dispatch) => {\n  const { data } = await Service.getService();\n  dispatch({\n    type: 'GET_SERVICEDETAILS',\n    payload: data,\n  });\n};\n// action to add vehicle Details\n\nexport const postServiceDetails = (val) => async (dispatch) => {\n  const { data } = await Service.postService(val);\n  History.push('/service');\n  dispatch(successMessage('Added successFully'));\n};\n\n// action to edit vehicle Details\n\nexport const getAllServiceDetails = (id) => async (dispatch) => {\n  dispatch({\n    type: 'GET_SERVICEID',\n    payload: id,\n  });\n  const { data } = await Service.getAllService(id);\n  dispatch({\n    type: 'GET_SERVICEIDDETAILSON',\n    payload: data,\n  });\n};\n\nexport const editServiceDetails = (id, payload) => async (dispatch) => {\n  dispatch({\n    type: 'GET_SERVICEID',\n    payload: id,\n  });\n  const { data } = await Service.editService(id, payload);\n  History.push('/service');\n  dispatch(successMessage('Edited successFully'));\n};\n\n// Logout action\nexport const logout = () => async (dispatch) => {\n  Cookies.remove('login');\n  Cookies.remove('User');\n  Cookies.remove('UserName');\n\n  dispatch({\n    type: 'LOGOUT',\n    payload: null,\n  });\n  History.push('/');\n  window.location.reload();\n};\n\n// Action to create a new user and encrypt password\nexport const createuser = (data) => async (dispatch) => {\n  const encryptedusersdata = await encrypt(data.password);\n  const { password, ...values } = data;\n\n  Service.setuserdata({\n    ...values,\n    encryptedusersdata,\n  });\n\n  History.push('/login');\n  dispatch(successMessage('SignUp successFully'));\n};\n\n// Action to get the admin data from JSON and decrypt\nexport const setLoginUsers = (admindata) => async (dispatch) => {\n  let payload;\n\n  const User = await Service.getuserdata();\n\n  const usersCheck = await User.data.find(\n    ({ userName }) => userName === admindata.userName\n  );\n  if (!usersCheck) {\n    alert('not valid ');\n  }\n  const userDecrypt = decrypt(usersCheck.encryptedusersdata);\n\n  if (userDecrypt === admindata.password) {\n    payload = admindata.userName;\n    Cookies.set('User', admindata.userName);\n    Cookies.set('UserName', admindata.userName);\n\n    dispatch({\n      type: 'CHECK_USER ',\n      payload,\n    });\n    History.push('/');\n    window.location.reload();\n  } else {\n    payload = false;\n    alert('incorrect password or Username');\n    dispatch(successMessage('Login SuccessFully'));\n    // History.push('/');\n  }\n};\n\n// change password\n\nexport const passwordChange =\n  (user, currentPassword, newPassword) => async (dispatch) => {\n    const { data } = await Service.getuserdata();\n    const usersCheck = data.find((item) => item.userName === user);\n    const decrypted = decrypt(usersCheck.encryptedusersdata);\n\n    if (decrypted === currentPassword) {\n      let newPs = encrypt(newPassword);\n      let userName = usersCheck.userName;\n      const query = await Service.updatePass('users', usersCheck.id, {\n        userName: userName,\n        encryptedusersdata: newPs,\n      });\n      alert('password updated successfully');\n    } else {\n      alert('current password is wrong');\n    }\n    History.push('/');\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}